/**
 * @{#} CommonJdbcDaoTest.java Create on 2008-6-10 下午03:03:15
 *
 * Copyright (c) 2006- by CE.
 */
package com.sitechasia.webx.core.dao.jdbc;

import java.sql.Connection;
import java.sql.Statement;
import java.util.List;

import junit.framework.TestCase;

import org.apache.log4j.Logger;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.datasource.DriverManagerDataSource;

import com.sitechasia.webx.core.dao.jdbc.hsqldb.HsqldbPageSqlProvider;

/**
 * TODO
 * 类说明:
 * @author Administrator
 * @version 1.0
 * @see
 */
/**
 * @author Administrator
 *
 */
public class CommonJdbcDaoTest extends TestCase {
	protected final Logger logger = Logger.getLogger(getClass());

	CommonJdbcDao commonJdbcDao ;
	CustomerJdbcDomainDao jdbcDomainDao ;

	Connection conn;
	Statement statement;
	/* (non-Javadoc)
	 * @see junit.framework.TestCase#setUp()
	 */
	protected void setUp() throws Exception {
super.setUp();

		DriverManagerDataSource dataSource = new DriverManagerDataSource();
		dataSource.setDriverClassName("org.hsqldb.jdbcDriver");
		dataSource.setUrl("jdbc:hsqldb:.");
		dataSource.setUsername("sa");
		dataSource.setPassword("");

		JdbcTemplate jdbcTemplate = new JdbcTemplate();
		jdbcTemplate.setDataSource(dataSource);

		commonJdbcDao = new  CommonJdbcDao();
		commonJdbcDao.setDataSource(dataSource);
		commonJdbcDao.setJdbcTemplate(jdbcTemplate);


		jdbcDomainDao = new  CustomerJdbcDomainDao();
		jdbcDomainDao.setDataSource(dataSource);
		jdbcDomainDao.setJdbcTemplate(jdbcTemplate);
		//customerJdbcDomainDao.setObjectMapper(mapper);
		jdbcDomainDao.setPageSqlProvider(new HsqldbPageSqlProvider());

		conn = dataSource.getConnection();

		statement=conn.createStatement();
		statement.executeUpdate("CREATE TABLE CUSTOMER(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY, " +
								"NAME VARCHAR(256), " +
								"AGE INTEGER, " +
								"MEMO VARCHAR(256))");
		statement.executeUpdate("insert into CUSTOMER values(1,'admin', 30, 'Administrator')");
		statement.executeUpdate("insert into CUSTOMER values(2,'todd', 30, 'todd')");
		statement.executeUpdate("insert into CUSTOMER values(3,'markdong', 30, 'dongnan')");

	}

	/* (non-Javadoc)
	 * @see junit.framework.TestCase#tearDown()
	 */
	protected void tearDown() throws Exception {
		super.tearDown();
		statement.executeUpdate("DROP TABLE CUSTOMER;");
		statement.close();
		conn.close();
	}

	/**
	 * {@link com.sitechasia.webx.core.dao.jdbc.CommonJdbcDao#update(java.lang.String)} 的测试方法。
	 */
	public void testUpdate() {
		Customer customer = jdbcDomainDao.get(2);
		assertEquals(customer.getName(),"todd");

		int updates = commonJdbcDao.update("update customer set name='姚博文' where id=2");
		assertEquals(1,updates);

		customer = jdbcDomainDao.get(2);
		assertEquals(customer.getName(),"姚博文");


	}

	/**
	 * {@link com.sitechasia.webx.core.dao.jdbc.CommonJdbcDao#execute(java.lang.String)} 的测试方法。
	 */
	public void testExecute() {
		int count = jdbcDomainDao.listAll(0, 0).size();
		commonJdbcDao.execute("insert into CUSTOMER values(4,'alang', 30, '姚博文')");
		int count2 = jdbcDomainDao.listAll(0, 0).size();
		assertEquals(count,count2-1);

	}

	/**
	 * {@link com.sitechasia.webx.core.dao.jdbc.CommonJdbcDao#batchUpdate(java.lang.String[])} 的测试方法。
	 */
	public void testBatchUpdate() {
		int count = jdbcDomainDao.listAll(0, 0).size();

		String[] sqls = new String[]{"insert into CUSTOMER values(4,'alang', 30, '姚博文')","update customer set name='姚博文' where id=2"};
		commonJdbcDao.batchUpdate(sqls);
		Customer customer = jdbcDomainDao.get(2);
		assertEquals(customer.getName(),"姚博文");
		int count2 = jdbcDomainDao.listAll(0, 0).size();
		assertEquals(count,count2-1);
	}

	/**
	 * {@link com.sitechasia.webx.core.dao.jdbc.CommonJdbcDao#listBySql(java.lang.String, java.lang.Object...)} 的测试方法。
	 */
	public void testListBySql() {
		String sql = "select * from customer where id<?";
		List list = commonJdbcDao.listBySql(sql, 3);
		assertEquals(list.size(),2);
	}

	/**
	 * {@link com.sitechasia.webx.core.dao.jdbc.CommonJdbcDao#queryForInt(java.lang.String)} 的测试方法。
	 */
	public void testQueryForIntString() {
		String sql = "select count(*) from customer";
		int count = commonJdbcDao.queryForInt(sql);
		assertEquals(count,3);
	}

	/**
	 * {@link com.sitechasia.webx.core.dao.jdbc.CommonJdbcDao#queryForInt(java.lang.String, java.lang.Object[])} 的测试方法。
	 */
	public void testQueryForIntStringObjectArray() {
		String sql = "select count(*) from customer where id<?";
		int count = commonJdbcDao.queryForInt(sql,new Integer[]{2});
		assertEquals(count,1);
	}

	/**
	 * {@link com.sitechasia.webx.core.dao.jdbc.CommonJdbcDao#queryForLong(java.lang.String)} 的测试方法。
	 */
	public void testQueryForLongString() {
		String sql = "select count(*) from customer";
		long count = commonJdbcDao.queryForLong(sql);
		assertEquals(count,3);
	}

	/**
	 * {@link com.sitechasia.webx.core.dao.jdbc.CommonJdbcDao#queryForLong(java.lang.String, java.lang.Object[])} 的测试方法。
	 */
	public void testQueryForLongStringObjectArray() {
		String sql = "select count(*) from customer where id<?";
		long count = commonJdbcDao.queryForLong(sql,new Long[]{2l});
		assertEquals(count,1);
	}

}
