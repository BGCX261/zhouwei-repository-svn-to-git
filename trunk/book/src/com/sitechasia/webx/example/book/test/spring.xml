<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-2.5.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

	<tx:annotation-driven />

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="org.hsqldb.jdbcDriver" />
		<property name="url" value="jdbc:hsqldb:mem:book;create=true" />
		<property name="username" value="sa" />
		<property name="password" value="" />
	</bean>

	<bean name="cacheInterceptor" class="com.sitechasia.webx.core.cache.CacheInterceptor" />

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mappingResources">
			<list>
				<value>
					com/sitechasia/webx/example/book/model/Book.hbm.xml
				</value>
				<value>
					com/sitechasia/webx/example/book/model/Category.hbm.xml
				</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect
				</prop>
				<prop key="hibernate.generate_statistics">true</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.OSCacheProvider
				</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
		<property name="entityInterceptor" ref="cacheInterceptor" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="bookDao"
		class="com.sitechasia.webx.example.book.dao.impl.BookHibernateDaoImpl">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>

	<bean id="categoryDao"
		class="com.sitechasia.webx.example.book.dao.impl.CategoryHibernateDaoImpl">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>

	<bean id="service"
		class="com.sitechasia.webx.example.book.service.impl.ServiceImpl">
		<property name="bookDao">
			<ref bean="bookDao" />
		</property>
		<property name="categoryDao">
			<ref bean="categoryDao" />
		</property>
	</bean>

	<!-- Cache相关的配置文件 -->
	<bean id="webxCacheProvider" class="com.sitechasia.webx.core.cache.ehcache.EhCacheProvider"
		init-method="start" destroy-method="close" />
	<!-- AOP配置 -->
	<bean id="cacheAdvice" class="com.sitechasia.webx.core.cache.annotation.CacheAdvisor">
		<property name="webxCacheProvider" ref="webxCacheProvider" />
	</bean>
	<aop:config proxy-target-class="true">
		<!-- Cache相关 -->
		<aop:aspect id="cacheableAdvice" ref="cacheAdvice" order="0">
			<aop:pointcut id="cachePointCut"
				expression="execution(* com.sitechasia.webx.example.book.service.Service.*(..))  and @annotation(com.sitechasia.webx.core.cache.annotation.WebXCache)" />
			<aop:around method="doCache" pointcut-ref="cachePointCut" />
		</aop:aspect>
	</aop:config>

</beans>
