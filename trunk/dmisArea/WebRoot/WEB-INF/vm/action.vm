package ${actionpackage};

import java.util.List;
import java.util.Map;
import java.io.OutputStream;
import java.util.ArrayList;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.commons.lang.StringUtils;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import com.techstar.framework.utils.SequenceCreator;

import org.apache.struts.upload.FormFile;
import com.techstar.framework.web.action.BaseDispatchAction;
import com.techstar.framework.dao.model.QueryListObj;
import com.techstar.framework.ui.entity.GridInfoObj;
import com.techstar.framework.ui.web.facade.SysUiGridFacade;

import ${facadepackage}.${action.mainentity.entityBean.getUpEnName()}Facade;
import ${formpackage}.${action.mainentity.entityBean.getUpEnName()}Form;
import ${dtopackage}.${action.mainentity.entityBean.getUpEnName()}Dto;
//please add your business methods start
	// to do it
//add your business method end


/**
 * @author 
 * @date
 */
public class ${action.mainentity.entityBean.getUpEnName()}Action 
              extends BaseDispatchAction {
	private ${action.mainentity.entityBean.getUpEnName()}Facade ${action.mainentity.entityBean.getLowEnName()}Facade;
    private SysUiGridFacade sysUiGridFacade;
	public ${action.mainentity.entityBean.getUpEnName()}Action() {
	}

	/**
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward list(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		//  查询列表
		List list = ${action.mainentity.entityBean.getLowEnName()}Facade.list${action.mainentity.entityBean.getUpEnName()}();
		request.getSession().setAttribute("${action.mainentity.entityBean.getUpEnName()}List", list);

		// 记录操作日志
		//saveLog("${action.mainentity.entityBean.getUpEnName()}er", "查询列表");
		return mapping.findForward("list");
	}

	/**
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward add(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		${action.mainentity.entityBean.getUpEnName()}Form ${action.mainentity.entityBean.getLowEnName()}Form = (${action.mainentity.entityBean.getUpEnName()}Form) form;
		${action.mainentity.entityBean.getUpEnName()}Dto dto = ${action.mainentity.entityBean.getLowEnName()}Form.get${action.mainentity.entityBean.getUpEnName()}Dto();
	    
		//附件处理
		#if($action.mainentity.entityBean.blobAttrbeans.size()>0)
			#foreach($battr in $action.mainentity.entityBean.blobAttrbeans)
				
		FormFile $battr.enName = ${action.mainentity.entityBean.getLowEnName()}Form.get${battr.getUpEnName()}();
		if( $battr.enName != null ){
	        	dto.set${battr.getUpEnName()}( ${battr.enName}.getFileData() );
		  }
	    
		#end
		#end
		//如果主键为空，则生成主键

		if( StringUtils.isEmpty(dto.${action.mainentity.entityBean.getPKGetMethod()}())){
             dto.${action.mainentity.entityBean.getPKSetMethod()}( new SequenceCreator().getUID() ); //生成内部序列号
        }
			${action.mainentity.entityBean.getLowEnName()}Facade.add${action.mainentity.entityBean.getUpEnName()}(dto);
		
		
		//saveLog("${action.mainentity.entityBean.getUpEnName()}er", "增加记录");
		return mapping.findForward("data");
	}
	
	/**
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward initModify(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		${action.mainentity.entityBean.getUpEnName()}Form ${action.mainentity.entityBean.getLowEnName()}Form = (${action.mainentity.entityBean.getUpEnName()}Form) form;
		String ${action.mainentity.entityBean.PkEnName}= request.getParameter("${action.mainentity.entityBean.PkEnName}");
		if (StringUtils.isNotEmpty(${action.mainentity.entityBean.PkEnName})) {
			${action.mainentity.entityBean.getUpEnName()}Dto dto = ${action.mainentity.entityBean.getLowEnName()}Facade.get${action.mainentity.entityBean.getUpEnName()}ById(${action.mainentity.entityBean.getPKInputType()});
			${action.mainentity.entityBean.getLowEnName()}Form.set${action.mainentity.entityBean.getUpEnName()}Dto(dto);
		}
		
		//saveLog("${action.mainentity.entityBean.getUpEnName()}er", "初始化记录操作");
		return mapping.findForward("data");
	}
	
	/**
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward delete(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		String ${action.mainentity.entityBean.PkEnName} = request.getParameter("${action.mainentity.entityBean.PkEnName}");
		if (StringUtils.isNotEmpty(${action.mainentity.entityBean.PkEnName})) {
			List list = ${action.mainentity.entityBean.getLowEnName()}Facade.delete${action.mainentity.entityBean.getUpEnName()}(${action.mainentity.entityBean.getPKInputType()});
			request.getSession().setAttribute("${action.mainentity.entityBean.getUpEnName()}List", list);
		}

		//saveLog("${action.mainentity.entityBean.getUpEnName()}er", "删除记录操作");
		return mapping.findForward("list");
	}

	public void set${action.mainentity.entityBean.getUpEnName()}Facade(${action.mainentity.entityBean.getUpEnName()}Facade ${action.mainentity.entityBean.getLowEnName()}Facade) {
		this.${action.mainentity.entityBean.getLowEnName()}Facade = ${action.mainentity.entityBean.getLowEnName()}Facade;
	}
    
	#if($action.mainentity.entityBean.blobAttrbeans.size()>0)
		
		#foreach($battr in $action.mainentity.entityBean.blobAttrbeans)
	//提供对大字段文件下载的方法		
	public ActionForward download_${battr.getLowEnName()}(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
			String ${action.mainentity.entityBean.PkEnName} = request.getParameter("${action.mainentity.entityBean.PkEnName}");
		${action.mainentity.entityBean.getUpEnName()}Dto dto = ${action.mainentity.entityBean.getLowEnName()}Facade.get${action.mainentity.entityBean.getUpEnName()}ById(${action.mainentity.entityBean.getPKInputType()});
		response.setContentType("application/x-msdownload");
		OutputStream os = response.getOutputStream();
		os.write(dto.get${battr.getUpEnName()}());
		os.flush();
		return null;
	}
	#end
	#end
	

	#if($wfServices.size()>0)
		#foreach($workflow in $wfServices)
			#foreach($method in $workflow.getFunctions())
	 //工作流方法			
	 public ActionForward ${method.enName}${action.mainentity.entityBean.getUpEnName()}(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
			
		//${action.mainentity.entityBean.getLowEnName()}Facade.${method.enName}${action.mainentity.entityBean.getUpEnName()}($method.getParamValueStr());
	    return mapping.findForward("demo");
	}
	#end
	#end
	#end
	

	
	//noEditGrid editGrid tab toolbar detail
	
	#foreach($tile in $action.strutsTiles)
		
	#if($tile.type==11)	
	public ActionForward ${tile.definition_Name}(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		return mapping.findForward("${tile.definition_Name}");
	}	
	#end
	
	#if($tile.type==203)
		//初始化表格
	  public ActionForward ${tile.methodName}(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {

		//由业务自行定义的
		String hqlStr = ""; 	//业务HQL
		String userId = "user"; //用户ID

		//取到表格的信息

		GridInfoObj gridInfo = sysUiGridFacade.getGridInfo(request,hqlStr,userId);
		
		String hqlSql = gridInfo.getHqlSql();
		int beginPage = gridInfo.getBeginPage();
		int pageSize = gridInfo.getPageSize();
		String sumSql = gridInfo.getSumSql();
		Map params = gridInfo.getGridPersonalInfo();
		
		/*
		List dtolist = new ArrayList();
		${action.mainentity.entityBean.getUpEnName()}FacadeDto ${action.mainentity.entityBean.getLowEnName()}Dto = new ${action.mainentity.entityBean.getUpEnName()}Dto();
					//${action.mainentity.entityBean.getLowEnName()}Dto.setCustom_id("custom_id");
					//${action.mainentity.entityBean.getLowEnName()}Dto.setCustom_name("Custom_name");
		for(int i=0;i<50;i++){
			dtolist.add(${action.mainentity.entityBean.getLowEnName()}Dto);
		}
		int count = dtolist.size();
		List sumInfo = new ArrayList();
		*/
		
		/**
		 *  表格控件基础对象
		 */
//		BaseGridObj gridObj = new BaseGridObj();
//		gridObj.setId("mygrid");
//		gridObj.setPageId("page");
//		gridObj.setDivHeight("400");
//		gridObj.setBusName("${action.mainentity.entityBean.getUpEnName()}Dto");
//		gridObj.setSubName("general");
//		gridObj.setPageItems("4");
//		gridObj.setListType("3");
//		gridObj.setListKind("101");
//		gridObj.setFilterMode("2");
//		gridObj.setEntityName("${action.mainentity.entityBean.getUpEnName()}");
//		gridObj.setIsFilterRow("1");
//		gridObj.setIsTotalRow("1");
//		gridObj.setColumnMove("custom_id,custom_name");
//		gridObj.setIsTotal("total");
//		gridObj.setListBox("cre_date#7^,custom_id#1^type=zzmm@@@parentId=,custom_name#2^src=SQDW,sale_mode#2^src=SQDW");
//		gridObj.setQueryPath("/ui.do?method=query");
//		gridObj.setIsDisplaySet("1");
//		gridObj.setIsQuerySet("1");
//		gridObj.setIsOutputSet("1");
//		gridObj.setIsStatSet("1");
//		gridObj.setIsPageSet("1");
//		request.setAttribute("gridObj",gridObj);
		
		int count = 0;
		List dtolist = new ArrayList();
		List sumInfo = new ArrayList();
		if(!StringUtils.isEmpty(hqlSql)){
			QueryListObj queryObj = ${action.mainentity.entityBean.getLowEnName()}Facade.get${action.mainentity.entityBean.getUpEnName()}ByHql(hqlSql, beginPage, pageSize, sumSql);
			dtolist = queryObj.getElemList();
			count   = queryObj.getCount();
			sumInfo = queryObj.getPropertySum();
		}	
		
		String xmlStr = sysUiGridFacade.parseParamToGridStr(request, gridInfo.getGridPersonalInfo(), dtolist, gridInfo.getBeginPage(), gridInfo.getPageSize(), count, sumInfo);
		return this.printResponseMes(request,response,mapping,"${tile.definition_Name}",xmlStr);
	}
		
		
	#end
	
	#if($tile.type==201)
		    //初始化tab页
			public ActionForward ${tile.definition_Name}(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		    return mapping.findForward("${tile.definition_Name}");
	     }
	#end
	   #if($tile.type==200)
		 //初始化toolbar
	     public ActionForward ${tile.definition_Name}(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
			
			String method =  "${tile.component.toHtml()}";
			
		    request.setAttribute("xmlData",method);
		    return mapping.findForward("${tile.definition_Name}");
	    }

		#end

  #set($foo = 1 )

  #if($tile.type==10)
	//处理DETAIL页面
	#if($foo==1)
	    public ActionForward initDetail(ActionMapping mapping, ActionForm form,
		 HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		 ${action.mainentity.entityBean.getUpEnName()}Form ${action.mainentity.entityBean.getLowEnName()}Form = (${action.mainentity.entityBean.getUpEnName()}Form) form;
		String mainId = (String) request.getParameter("mainId");
		String isCopy = (String) request.getParameter("isCopy");
		${action.mainentity.entityBean.getUpEnName()}Dto ${action.mainentity.entityBean.getLowEnName()}Dto = null;
		if (StringUtils.isNotEmpty(isCopy) && isCopy.equalsIgnoreCase("true")) {//复制
			if (StringUtils.isNotEmpty(mainId)) {
				${action.mainentity.entityBean.getLowEnName()}Dto = ${action.mainentity.entityBean.getLowEnName()}Facade.get${action.mainentity.entityBean.getUpEnName()}ById(mainId);
				${action.mainentity.entityBean.getLowEnName()}Dto.setVersion(0);
				//${action.mainentity.entityBean.getLowEnName()}Dto.setId(null);
			}
		} else {
			if (StringUtils.isNotEmpty(mainId)) {// 修改
				${action.mainentity.entityBean.getLowEnName()}Dto = ${action.mainentity.entityBean.getLowEnName()}Facade.get${action.mainentity.entityBean.getUpEnName()}ById(mainId);
			} else {// 新增
				${action.mainentity.entityBean.getLowEnName()}Dto = new ${action.mainentity.entityBean.getUpEnName()}Dto();
			}
		}
		${action.mainentity.entityBean.getLowEnName()}Form.set${action.mainentity.entityBean.getUpEnName()}Dto(${action.mainentity.entityBean.getLowEnName()}Dto);
		   return mapping.findForward("${tile.definition_Name}");
		   }
		
	  public ActionForward saveDetail(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		 ${action.mainentity.entityBean.getUpEnName()}Form  ${action.mainentity.entityBean.getLowEnName()}Form = ( ${action.mainentity.entityBean.getUpEnName()}Form) form;
		 ${action.mainentity.entityBean.getUpEnName()}Dto  ${action.mainentity.entityBean.getLowEnName()}Dto = ${action.mainentity.entityBean.getLowEnName()}Form.get${action.mainentity.entityBean.getUpEnName()}Dto();
		${action.mainentity.entityBean.getLowEnName()}Facade.add${action.mainentity.entityBean.getUpEnName()}(${action.mainentity.entityBean.getLowEnName()}Dto);
		${action.mainentity.entityBean.getLowEnName()}Dto = ${action.mainentity.entityBean.getLowEnName()}Facade.get${action.mainentity.entityBean.getUpEnName()}ById(${action.mainentity.entityBean.getLowEnName()}Dto.${action.mainentity.entityBean.getPKGetMethod()}());
		${action.mainentity.entityBean.getLowEnName()}Form.set${action.mainentity.entityBean.getUpEnName()}Dto(${action.mainentity.entityBean.getLowEnName()}Dto);
		saveMessages(request, "message.save.success", new String[] { "${action.mainentity.entityBean.cnName}Dto" });
		return mapping.findForward("${tile.definition_Name}");
	}
	#else
		public ActionForward initDetail$foo(ActionMapping mapping, ActionForm form,

	     HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		    return mapping.findForward("${tile.definition_Name}");
	}
	     public ActionForward saveDetail$foo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
	
		 return mapping.findForward("${tile.definition_Name}");
	}
    #end
    #set($foo=$foo+1)
  #end
   
  
  #end
	
	public void setSysUiGridFacade(SysUiGridFacade sysUiGridFacade) {
		this.sysUiGridFacade = sysUiGridFacade;
	}

	
	
	
  /**
    * @business method list
	 #foreach($method in $methods)
	* @${method.cnName}
	 #end
 */	
	//please add your business methods start
	// to do it
    //add your business method end
}
