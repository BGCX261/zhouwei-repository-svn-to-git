<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-2.5.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

	<tx:annotation-driven />

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="org.hsqldb.jdbcDriver" />
		<property name="jdbcUrl" value="jdbc:hsqldb:mem:jpetstore;create=true" />
		<property name="user" value="sa" />
		<property name="password" value="" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="annotatedClasses">
			<list>
				<value>com.sitechasia.webx.example.course.model.Course
				</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect
				</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.cache.provider_class">
					com.sitechasia.webx.components.cache.memcached.MemcachedCacheProvider
				</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.cache.region_prefix">quality.cache.ehcache</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.use_structured_entries">true</prop>
				<prop key="memcached.servers">localhost:11211</prop>
				<prop key="memcached.failover">true</prop>
				<prop key="memcached.initConn">100</prop>
				<prop key="memcached.minConn">100</prop>
				<prop key="memcached.maxConn">250</prop>
				<prop key="memcached.maintSleep">30</prop>
				<prop key="memcached.nagle">false</prop>
				<prop key="memcached.socketTO">3000</prop>
				<prop key="memcached.aliveCheck">true</prop>
				<prop key="memcached.region_name">20m</prop>
			</props>
		</property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="courseDao"
		class="com.sitechasia.webx.example.course.dao.impl.CourseHibernateDaoImpl">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>

	<bean id="courseService"
		class="com.sitechasia.webx.example.course.service.impl.CourseServiceImpl">
		<property name="courseDao">
			<ref bean="courseDao" />
		</property>
	</bean>

	<bean id="myJobBean" class="com.sitechasia.webx.example.course.test.MyJob">
		<property name="courseService" ref="courseService" />
	</bean>

	<bean id="myJob"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="myJobBean" />
		<property name="targetMethod" value="run" />
	</bean>

	<bean id="myTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<!-- see the example of method invoking job above -->
		<property name="jobDetail" ref="myJob" />
		<!-- 10 seconds -->
		<property name="startDelay" value="10000" />
		<!-- repeat every 10 seconds -->
		<property name="repeatInterval" value="10000" />
	</bean>


	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="myTrigger" />
			</list>
		</property>
	</bean>

</beans>
